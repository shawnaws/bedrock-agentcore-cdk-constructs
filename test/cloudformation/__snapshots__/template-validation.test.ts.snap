// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CloudFormation Template Validation CloudFormation Template Snapshots should generate consistent template for BedrockAgentCoreRuntimeAgent: bedrock-agent-core-runtime-template 1`] = `
{
  "Conditions": {
    "MinimalKBminimalkbKBVectorsIsDataAccessPolicyNotEmptyBD732F3F": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            0,
            1,
          ],
        },
      ],
    },
  },
  "Outputs": {
    "MinimalKBDataSourceId135F8B50": {
      "Description": "ID of the S3 data source",
      "Export": {
        "Name": "TestStack-minimal-kb-DataSourceId",
      },
      "Value": {
        "Fn::GetAtt": [
          "MinimalKBkbS3DataSource1E97BDD3",
          "DataSourceId",
        ],
      },
    },
    "MinimalKBKnowledgeBaseArnACEFE0AC": {
      "Description": "ARN of the created knowledge base",
      "Export": {
        "Name": "TestStack-minimal-kb-KnowledgeBaseArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
          "KnowledgeBaseArn",
        ],
      },
    },
    "MinimalKBKnowledgeBaseIdBB81105C": {
      "Description": "ID of the created knowledge base",
      "Export": {
        "Name": "TestStack-minimal-kb-KnowledgeBaseId",
      },
      "Value": {
        "Fn::GetAtt": [
          "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
          "KnowledgeBaseId",
        ],
      },
    },
    "TestAgentAgentCoreRoleArn29F8F598": {
      "Description": "ARN of the Agent Core Runtime execution role",
      "Export": {
        "Name": "TestStack-RoleArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestAgentAgentRole7811AA85",
          "Arn",
        ],
      },
    },
    "TestAgentAgentRuntimeArn02A292C5": {
      "Description": "ARN of the created Agent Core Runtime",
      "Export": {
        "Name": "TestStack-AgentRuntimeArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestAgentAgentRuntime11E2CCB8",
          "agentRuntimeArn",
        ],
      },
    },
    "TestAgentAgentRuntimeIdBE43F530": {
      "Description": "ID of the created Agent Core Runtime",
      "Export": {
        "Name": "TestStack-AgentRuntimeId",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestAgentAgentRuntime11E2CCB8",
          "agentRuntimeId",
        ],
      },
    },
    "TestAgentS3BucketName1921EC13": {
      "Description": "Name of the S3 bucket for data storage",
      "Export": {
        "Name": "TestStack-S3Bucket",
      },
      "Value": {
        "Ref": "TestBucket560B80BC",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "34a66902956b031404ef497526f619b900363fe7fd65ff02b1de4c30fe10c034.zip",
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 600,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287LogRetentionCE72797A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MinimalKBIngestionRole9CF6F20D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "bedrock:StartIngestionJob",
                    "bedrock:GetIngestionJob",
                    "bedrock:ListIngestionJobs",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
                      "KnowledgeBaseArn",
                    ],
                  },
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "IngestionPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MinimalKBIngestionRoleDefaultPolicy879148BE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrockagent:startIngestionJob",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
                    "KnowledgeBaseArn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MinimalKBIngestionRoleDefaultPolicy879148BE",
        "Roles": [
          {
            "Ref": "MinimalKBIngestionRole9CF6F20D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MinimalKBIngestionStateMachineLogGroup3C7F97AE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "MinimalKBS3DataSourceIngestionSyncA238D652": {
      "Properties": {
        "ScheduleExpression": "rate(10 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "MinimalKBStartIngestionJobStateMachine27FD4044",
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "MinimalKBStartIngestionJobStateMachineEventsRole06ADF921",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "MinimalKBStartIngestionJobStateMachine27FD4044": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "MinimalKBIngestionRoleDefaultPolicy879148BE",
        "MinimalKBIngestionRole9CF6F20D",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"StartIngestionJob","States":{"StartIngestionJob":{"Next":"IngestionSucceeded","Retry":[{"ErrorEquals":["States.TaskFailed","States.Timeout"],"IntervalSeconds":30,"MaxAttempts":3,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"IngestionFailed"}],"Type":"Task","ResultPath":"$.ingestionJob","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:bedrockagent:startIngestionJob","Parameters":{"KnowledgeBaseId":"",
              {
                "Fn::GetAtt": [
                  "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
                  "KnowledgeBaseId",
                ],
              },
              "","DataSourceId":"",
              {
                "Fn::GetAtt": [
                  "MinimalKBkbS3DataSource1E97BDD3",
                  "DataSourceId",
                ],
              },
              ""}},"IngestionSucceeded":{"Type":"Succeed","Comment":"Knowledge base ingestion job started successfully"},"IngestionFailed":{"Type":"Fail","Comment":"Knowledge base ingestion job failed after retries"}},"TimeoutSeconds":3600}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "MinimalKBIngestionStateMachineLogGroup3C7F97AE",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "IncludeExecutionData": true,
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "MinimalKBIngestionRole9CF6F20D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "MinimalKBStartIngestionJobStateMachineEventsRole06ADF921": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MinimalKBStartIngestionJobStateMachineEventsRoleDefaultPolicy6419F75D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "MinimalKBStartIngestionJobStateMachine27FD4044",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MinimalKBStartIngestionJobStateMachineEventsRoleDefaultPolicy6419F75D",
        "Roles": [
          {
            "Ref": "MinimalKBStartIngestionJobStateMachineEventsRole06ADF921",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MinimalKBkbS3DataSource1E97BDD3": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::GetAtt": [
                "TestBucket560B80BC",
                "Arn",
              ],
            },
            "InclusionPrefixes": [
              "minimal/",
            ],
          },
          "Type": "S3",
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
            "KnowledgeBaseId",
          ],
        },
        "Name": "minimal-kb",
        "VectorIngestionConfiguration": {
          "ChunkingConfiguration": {
            "ChunkingStrategy": "FIXED_SIZE",
            "FixedSizeChunkingConfiguration": {
              "MaxTokens": 500,
              "OverlapPercentage": 20,
            },
          },
        },
      },
      "Type": "AWS::Bedrock::DataSource",
    },
    "MinimalKBminimalkbKBCRPolicy079D00A7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock CreateKnowledgeBase can't be restricted by resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrock:CreateKnowledgeBase",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "bedrock:UpdateKnowledgeBase",
                "bedrock:DeleteKnowledgeBase",
                "bedrock:TagResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:us-east-1:123456789012:knowledge-base/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MinimalKBminimalkbRoleFC7F90E2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MinimalKBminimalkbKBCRPolicy079D00A7",
        "Roles": [
          {
            "Ref": "MinimalKBminimalkbRoleFC7F90E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MinimalKBminimalkbKBIndexManageIndexPolicy167084D9": {
      "DependsOn": [
        "MinimalKBminimalkbKBVectorsAOSSApiAccessAll559518EC",
        "MinimalKBminimalkbKBVectorsDataAccessPolicyF469B322",
        "MinimalKBminimalkbKBVectorsEncryptionPolicyFB7B10B3",
        "MinimalKBminimalkbKBVectorsNetworkPolicyAC32FF00",
        "MinimalKBminimalkbKBVectorsVectorCollection87AD22E5",
      ],
      "Properties": {
        "Name": "manageindexpolicytesdex3a9a5ff7",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"Resource":["index/vectorstoreteststectors4a92cfb5/*"],"Permission":["aoss:DescribeIndex","aoss:CreateIndex","aoss:DeleteIndex","aoss:UpdateIndex"],"ResourceType":"index"},{"Resource":["collection/vectorstoreteststectors4a92cfb5"],"Permission":["aoss:DescribeCollectionItems"],"ResourceType":"collection"}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "OpenSearchIndexCRProviderCRRole466FC04E",
                  "Arn",
                ],
              },
              ""],"Description":""}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "MinimalKBminimalkbKBIndexVectorIndex8A31925D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "MinimalKBminimalkbKBIndexManageIndexPolicy167084D9",
        "MinimalKBminimalkbKBVectorsAOSSApiAccessAll559518EC",
        "MinimalKBminimalkbKBVectorsDataAccessPolicyF469B322",
        "MinimalKBminimalkbKBVectorsEncryptionPolicyFB7B10B3",
        "MinimalKBminimalkbKBVectorsNetworkPolicyAC32FF00",
        "MinimalKBminimalkbKBVectorsVectorCollection87AD22E5",
      ],
      "Properties": {
        "Dimensions": 512,
        "DistanceType": "l2",
        "Endpoint": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "MinimalKBminimalkbKBVectorsVectorCollection87AD22E5",
                  "Id",
                ],
              },
              ".us-east-1.aoss.amazonaws.com",
            ],
          ],
        },
        "IndexName": "bedrock-knowledge-base-default-index",
        "MetadataManagement": [
          {
            "DataType": "text",
            "Filterable": true,
            "MappingField": "AMAZON_BEDROCK_TEXT_CHUNK",
          },
          {
            "DataType": "text",
            "Filterable": false,
            "MappingField": "AMAZON_BEDROCK_METADATA",
          },
        ],
        "Precision": "float",
        "ServiceToken": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderframeworkonEvent6CAE4696",
            "Arn",
          ],
        },
        "VectorField": "bedrock-knowledge-base-default-vector",
      },
      "Type": "Custom::OpenSearchIndex",
      "UpdateReplacePolicy": "Delete",
    },
    "MinimalKBminimalkbKBVectorsAOSSApiAccessAll559518EC": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MinimalKBminimalkbKBVectorsVectorCollection87AD22E5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "MinimalKBminimalkbKBVectorsDataAccessPolicyF469B322": {
      "Condition": "MinimalKBminimalkbKBVectorsIsDataAccessPolicyNotEmptyBD732F3F",
      "Properties": {
        "Name": "dataaccesspolicytesttors4a92cfb5",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"Resource":["collection/vectorstoreteststectors4a92cfb5"],"Permission":["aoss:DescribeCollectionItems","aoss:CreateCollectionItems","aoss:UpdateCollectionItems"],"ResourceType":"collection"},{"Resource":["index/vectorstoreteststectors4a92cfb5/*"],"Permission":["aoss:UpdateIndex","aoss:DescribeIndex","aoss:ReadDocument","aoss:WriteDocument","aoss:CreateIndex"],"ResourceType":"index"}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "MinimalKBminimalkbRoleFC7F90E2",
                  "Arn",
                ],
              },
              ""],"Description":""}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "MinimalKBminimalkbKBVectorsEncryptionPolicyFB7B10B3": {
      "Properties": {
        "Name": "encryptionpolicytesttors4a92cfb5",
        "Policy": "{"Rules":[{"ResourceType":"collection","Resource":["collection/vectorstoreteststectors4a92cfb5"]}],"AWSOwnedKey":true}",
        "Type": "encryption",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "MinimalKBminimalkbKBVectorsNetworkPolicyAC32FF00": {
      "Properties": {
        "Name": "networkpolicytestsctors4a92cfb5",
        "Policy": "[{"Rules":[{"ResourceType":"collection","Resource":["collection/vectorstoreteststectors4a92cfb5"]},{"ResourceType":"dashboard","Resource":["collection/vectorstoreteststectors4a92cfb5"]}],"AllowFromPublic":true}]",
        "Type": "network",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "MinimalKBminimalkbKBVectorsVectorCollection87AD22E5": {
      "DependsOn": [
        "MinimalKBminimalkbKBVectorsEncryptionPolicyFB7B10B3",
        "MinimalKBminimalkbKBVectorsNetworkPolicyAC32FF00",
      ],
      "Properties": {
        "Name": "vectorstoreteststectors4a92cfb5",
        "StandbyReplicas": "ENABLED",
        "Tags": [
          {
            "Key": "Name",
            "Value": "vectorstoreteststectors4a92cfb5",
          },
          {
            "Key": "Type",
            "Value": "VectorCollection",
          },
        ],
        "Type": "VECTORSEARCH",
      },
      "Type": "AWS::OpenSearchServerless::Collection",
    },
    "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2": {
      "DependsOn": [
        "MinimalKBminimalkbKBCRPolicy079D00A7",
        "MinimalKBminimalkbKBIndexManageIndexPolicy167084D9",
        "MinimalKBminimalkbKBIndexVectorIndex8A31925D",
        "MinimalKBminimalkbRoleDefaultPolicy17B4C64F",
        "MinimalKBminimalkbRoleFC7F90E2",
      ],
      "Properties": {
        "Description": "Minimal knowledge base for agent testing",
        "KnowledgeBaseConfiguration": {
          "Type": "VECTOR",
          "VectorKnowledgeBaseConfiguration": {
            "EmbeddingModelArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":bedrock:",
                  {
                    "Ref": "AWS::Region",
                  },
                  "::foundation-model/amazon.titan-embed-text-v2:0",
                ],
              ],
            },
            "EmbeddingModelConfiguration": {
              "BedrockEmbeddingModelConfiguration": {
                "Dimensions": 512,
                "EmbeddingDataType": "FLOAT32",
              },
            },
          },
        },
        "Name": "KBTestStackMiKBminimalkb0CA8AAB0",
        "RoleArn": {
          "Fn::GetAtt": [
            "MinimalKBminimalkbRoleFC7F90E2",
            "Arn",
          ],
        },
        "StorageConfiguration": {
          "OpensearchServerlessConfiguration": {
            "CollectionArn": {
              "Fn::GetAtt": [
                "MinimalKBminimalkbKBVectorsVectorCollection87AD22E5",
                "Arn",
              ],
            },
            "FieldMapping": {
              "MetadataField": "AMAZON_BEDROCK_METADATA",
              "TextField": "AMAZON_BEDROCK_TEXT_CHUNK",
              "VectorField": "bedrock-knowledge-base-default-vector",
            },
            "VectorIndexName": "bedrock-knowledge-base-default-index",
          },
          "Type": "OPENSEARCH_SERVERLESS",
        },
      },
      "Type": "AWS::Bedrock::KnowledgeBase",
    },
    "MinimalKBminimalkbRoleDefaultPolicy17B4C64F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock Knowledge Base requires wildcard permissions to invoke embedding models",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The KB role needs read only access to all objects in the data source bucket.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock:InvokeModel*",
                "bedrock:GetFoundationModel",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    "::foundation-model/amazon.titan-embed-text-v2:0",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MinimalKBminimalkbRoleDefaultPolicy17B4C64F",
        "Roles": [
          {
            "Ref": "MinimalKBminimalkbRoleFC7F90E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MinimalKBminimalkbRoleFC7F90E2": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock Knowledge Base requires wildcard permissions to invoke embedding models",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The KB role needs read only access to all objects in the data source bucket.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":bedrock:us-east-1:123456789012:knowledge-base/*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": "123456789012",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "MinimalKBminimalkbKBVectorsAOSSApiAccessAll559518EC",
          },
        ],
        "RoleName": "AmazonBedrockExecutionRoleForKnowledgeBaseTestStanimalkb0CA8AAB0",
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenSearchIndexCRProviderCRRole466FC04E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK CustomResource Lambda uses the AWSLambdaBasicExecutionRole AWS Managed Policy.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "MinimalKBminimalkbKBVectorsAOSSApiAccessAll559518EC",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2": {
      "DependsOn": [
        "OpenSearchIndexCRProviderCRRole466FC04E",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "6e36b09442a3e1426f4d6c3e701e77353ebb81665d49ec53a1e27ed8fdef4bbf.zip",
        },
        "Description": "Custom Resource Provider",
        "Handler": "custom_resources.on_event",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderCRRole466FC04E",
            "Arn",
          ],
        },
        "Runtime": "python3.12",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OpenSearchIndexCRProviderCustomResourcesFunctionLogRetentionC32546EF": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "OpenSearchIndexCRProviderProviderRole87B4E831": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK CustomResource Lambda uses the AWSLambdaBasicExecutionRole AWS Managed Policy.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::<OpenSearchIndexCRProviderCustomResourcesFunction[A-Z0-9]+\\.Arn>:\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CDK CustomResource Provider has a wildcard to invoke any version of the specific Custom Resource function.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::<OpenSearchIndexCRProviderCustomResourcesFunction[A-Z0-9]+\\.Arn>:\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CDK CustomResource Provider has a wildcard to invoke any version of the specific Custom Resource function.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F",
        "Roles": [
          {
            "Ref": "OpenSearchIndexCRProviderProviderRole87B4E831",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OpenSearchIndexCRProviderframeworkonEvent6CAE4696": {
      "DependsOn": [
        "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F",
        "OpenSearchIndexCRProviderProviderRole87B4E831",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStack/OpenSearchIndexCRProvider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "ApplicationLogLevel": "FATAL",
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderProviderRole87B4E831",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OpenSearchIndexCRProviderframeworkonEventLogRetention64E7FA2B": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "OpenSearchIndexCRProviderframeworkonEvent6CAE4696",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TestAgentAgentRole7811AA85": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": "arn:aws:bedrock-agentcore:us-east-1:123456789012:*",
                },
                "StringEquals": {
                  "aws:SourceAccount": "123456789012",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock-agentcore.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestAgentAgentRoleDefaultPolicyD7FA17B4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock:InvokeModel",
                "bedrock:InvokeModelWithResponseStream",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "BedrockPermissions",
            },
            {
              "Action": [
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetAuthorizationToken",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:us-east-1:123456789012:repository/*",
              "Sid": "ECRImageAccess",
            },
            {
              "Action": [
                "logs:DescribeLogStreams",
                "logs:CreateLogGroup",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:us-east-1:123456789012:log-group:/aws/bedrock-agentcore/runtimes/*",
            },
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:us-east-1:123456789012:log-group:*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:us-east-1:123456789012:log-group:/aws/bedrock-agentcore/runtimes/*:log-stream:*",
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "ECRTokenAccess",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "XRayPermissions",
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": "bedrock-agentcore",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "bedrock-agentcore:GetWorkloadAccessToken",
                "bedrock-agentcore:GetWorkloadAccessTokenForJWT",
                "bedrock-agentcore:GetWorkloadAccessTokenForUserId",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:bedrock-agentcore:us-east-1:123456789012:workload-identity-directory/default",
                "arn:aws:bedrock-agentcore:us-east-1:123456789012:workload-identity-directory/defaultworkload-identity/test-agent-*",
              ],
              "Sid": "GetAgentAccessToken",
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:ListBucket",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/agent-data/*",
                    ],
                  ],
                },
              ],
              "Sid": "S3DataStorage",
            },
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":aoss:us-east-1:123456789012:collection/vectorstoreteststectors4a92cfb5",
                  ],
                ],
              },
            },
            {
              "Action": [
                "bedrock:Retrieve",
                "bedrock:RetrieveAndGenerate",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
                  "KnowledgeBaseArn",
                ],
              },
              "Sid": {
                "Fn::Join": [
                  "",
                  [
                    "KnowledgeBaseId-",
                    {
                      "Fn::GetAtt": [
                        "MinimalKBminimalkbMyCfnKnowledgeBaseBEA912A2",
                        "KnowledgeBaseId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestAgentAgentRoleDefaultPolicyD7FA17B4",
        "Roles": [
          {
            "Ref": "TestAgentAgentRole7811AA85",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestAgentAgentRuntime11E2CCB8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TestAgentAgentRuntimeCustomResourcePolicy69AC4949",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"bedrock-agentcore-control","action":"createAgentRuntime","parameters":{"agentRuntimeName":"test-agent","description":"Bedrock Agent Core Runtime for test-agent","agentRuntimeArtifact":{"containerConfiguration":{"containerUri":"",
              {
                "Fn::Sub": "123456789012.dkr.ecr.us-east-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-123456789012-us-east-1:b362f89f4115ff45b603718ab7ca3150c23230ad95a2d16f756ced7259ea857d",
              },
              ""}},"networkConfiguration":{"networkMode":"PUBLIC"},"protocolConfiguration":{"serverProtocol":"HTTP"},"roleArn":"",
              {
                "Fn::GetAtt": [
                  "TestAgentAgentRole7811AA85",
                  "Arn",
                ],
              },
              "","environmentVariables":{"MCP_PORT":"8000","MCP_AUTH_ENABLED":"false","MCP_SSE_ENABLED":"false","STORAGE_TYPE":"s3","S3_URL_EXPIRATION":"3600","USE_PRESIGNED_URLS":"true","NODE_ENV":"production","LOG_LEVEL":"info","S3_BUCKET":"",
              {
                "Ref": "TestBucket560B80BC",
              },
              "","S3_PREFIX":"agent-data/","S3_REGION":"us-east-1","AWS_REGION":"us-east-1"}},"physicalResourceId":{"responsePath":"agentRuntimeId"}}",
            ],
          ],
        },
        "Delete": "{"service":"bedrock-agentcore-control","action":"deleteAgentRuntime","parameters":{"agentRuntimeId":"PHYSICAL:RESOURCEID:"},"ignoreErrorCodesMatching":"ValidationException|InvalidParameterException|ResourceNotFoundException|BadRequestException|ConflictException|InternalServerException|.*agentRuntimeId.*|.*not.*found.*|.*does.*not.*exist.*"}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"bedrock-agentcore-control","action":"updateAgentRuntime","parameters":{"agentRuntimeId":"PHYSICAL:RESOURCEID:","description":"Bedrock Agent Core Runtime for test-agent","roleArn":"",
              {
                "Fn::GetAtt": [
                  "TestAgentAgentRole7811AA85",
                  "Arn",
                ],
              },
              "","agentRuntimeArtifact":{"containerConfiguration":{"containerUri":"",
              {
                "Fn::Sub": "123456789012.dkr.ecr.us-east-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-123456789012-us-east-1:b362f89f4115ff45b603718ab7ca3150c23230ad95a2d16f756ced7259ea857d",
              },
              ""}},"networkConfiguration":{"networkMode":"PUBLIC"},"protocolConfiguration":{"serverProtocol":"HTTP"},"environmentVariables":{"MCP_PORT":"8000","MCP_AUTH_ENABLED":"false","MCP_SSE_ENABLED":"false","STORAGE_TYPE":"s3","S3_URL_EXPIRATION":"3600","USE_PRESIGNED_URLS":"true","NODE_ENV":"production","LOG_LEVEL":"info","S3_BUCKET":"",
              {
                "Ref": "TestBucket560B80BC",
              },
              "","S3_PREFIX":"agent-data/","S3_REGION":"us-east-1","AWS_REGION":"us-east-1"}},"physicalResourceId":{"responsePath":"agentRuntimeId"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AgentCoreRuntime",
      "UpdateReplacePolicy": "Delete",
    },
    "TestAgentAgentRuntimeCustomResourcePolicy69AC4949": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock-agentcore:CreateAgentRuntime",
                "bedrock-agentcore:CreateAgentRuntimeEndpoint",
                "bedrock-agentcore:UpdateAgentRuntime",
                "bedrock-agentcore:UpdateAgentRuntimeEndpoint",
                "bedrock-agentcore:DeleteAgentRuntime",
                "bedrock-agentcore:DeleteAgentRuntimeEndpoint",
                "bedrock-agentcore:GetAgentRuntime",
                "bedrock-agentcore:GetAgentRuntimeEndpoint",
                "bedrock-agentcore:DescribeAgentRuntime",
                "bedrock-agentcore:ListAgentRuntimes",
                "bedrock-agentcore:ListAgentRuntimeEndpoints",
                "bedrock-agentcore:CreateWorkloadIdentity",
                "bedrock-agentcore:DeleteWorkloadIdentity",
                "bedrock-agentcore:GetWorkloadIdentity",
                "bedrock-agentcore:UpdateWorkloadIdentity",
                "bedrock-agentcore:ListWorkloadIdentities",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock-agentcore:us-east-1:123456789012:*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock-agentcore:us-east-1:123456789012:runtime/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock-agentcore:us-east-1:123456789012:workload-identity-directory/*",
                    ],
                  ],
                },
              ],
              "Sid": "AgentCoreRuntimeManagement",
            },
            {
              "Action": "iam:PassRole",
              "Condition": {
                "StringEquals": {
                  "iam:PassedToService": "bedrock-agentcore.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestAgentAgentRole7811AA85",
                  "Arn",
                ],
              },
              "Sid": "AgentCorePassRole",
            },
            {
              "Action": [
                "ecr:DescribeImages",
                "ecr:DescribeRepositories",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:us-east-1:123456789012:repository/*",
                  ],
                ],
              },
              "Sid": "ECRValidateImages",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestAgentAgentRuntimeCustomResourcePolicy69AC4949",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestBucket560B80BC": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`CloudFormation Template Validation CloudFormation Template Snapshots should generate consistent template for BedrockKnowledgeBase: bedrock-knowledge-base-template 1`] = `
{
  "Conditions": {
    "TestKBtestkbKBVectorsIsDataAccessPolicyNotEmpty0A94954A": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            0,
            1,
          ],
        },
      ],
    },
  },
  "Outputs": {
    "TestKBDataSourceId717D5BD3": {
      "Description": "ID of the S3 data source",
      "Export": {
        "Name": "TestStack-test-kb-DataSourceId",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestKBkbS3DataSourceCDF728B0",
          "DataSourceId",
        ],
      },
    },
    "TestKBKnowledgeBaseArn4BD2C453": {
      "Description": "ARN of the created knowledge base",
      "Export": {
        "Name": "TestStack-test-kb-KnowledgeBaseArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
          "KnowledgeBaseArn",
        ],
      },
    },
    "TestKBKnowledgeBaseIdECF5BC89": {
      "Description": "ID of the created knowledge base",
      "Export": {
        "Name": "TestStack-test-kb-KnowledgeBaseId",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
          "KnowledgeBaseId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OpenSearchIndexCRProviderCRRole466FC04E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK CustomResource Lambda uses the AWSLambdaBasicExecutionRole AWS Managed Policy.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2": {
      "DependsOn": [
        "OpenSearchIndexCRProviderCRRole466FC04E",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "6e36b09442a3e1426f4d6c3e701e77353ebb81665d49ec53a1e27ed8fdef4bbf.zip",
        },
        "Description": "Custom Resource Provider",
        "Handler": "custom_resources.on_event",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderCRRole466FC04E",
            "Arn",
          ],
        },
        "Runtime": "python3.12",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OpenSearchIndexCRProviderCustomResourcesFunctionLogRetentionC32546EF": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "OpenSearchIndexCRProviderProviderRole87B4E831": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK CustomResource Lambda uses the AWSLambdaBasicExecutionRole AWS Managed Policy.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::<OpenSearchIndexCRProviderCustomResourcesFunction[A-Z0-9]+\\.Arn>:\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CDK CustomResource Provider has a wildcard to invoke any version of the specific Custom Resource function.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::<OpenSearchIndexCRProviderCustomResourcesFunction[A-Z0-9]+\\.Arn>:\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CDK CustomResource Provider has a wildcard to invoke any version of the specific Custom Resource function.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F",
        "Roles": [
          {
            "Ref": "OpenSearchIndexCRProviderProviderRole87B4E831",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OpenSearchIndexCRProviderframeworkonEvent6CAE4696": {
      "DependsOn": [
        "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F",
        "OpenSearchIndexCRProviderProviderRole87B4E831",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStack/OpenSearchIndexCRProvider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "ApplicationLogLevel": "FATAL",
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderProviderRole87B4E831",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OpenSearchIndexCRProviderframeworkonEventLogRetention64E7FA2B": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "OpenSearchIndexCRProviderframeworkonEvent6CAE4696",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TestBucket560B80BC": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestKBIngestionRole9E63714E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "bedrock:StartIngestionJob",
                    "bedrock:GetIngestionJob",
                    "bedrock:ListIngestionJobs",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                      "KnowledgeBaseArn",
                    ],
                  },
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "IngestionPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestKBIngestionRoleDefaultPolicyEC999C4D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrockagent:startIngestionJob",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                    "KnowledgeBaseArn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBIngestionRoleDefaultPolicyEC999C4D",
        "Roles": [
          {
            "Ref": "TestKBIngestionRole9E63714E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestKBIngestionStateMachineLogGroup242A951D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "TestKBS3DataSourceIngestionSyncF8A0DD07": {
      "Properties": {
        "ScheduleExpression": "rate(10 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TestKBStartIngestionJobStateMachineB364EE04",
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "TestKBStartIngestionJobStateMachineEventsRoleD4F80410",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "TestKBStartIngestionJobStateMachineB364EE04": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TestKBIngestionRoleDefaultPolicyEC999C4D",
        "TestKBIngestionRole9E63714E",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"StartIngestionJob","States":{"StartIngestionJob":{"Next":"IngestionSucceeded","Retry":[{"ErrorEquals":["States.TaskFailed","States.Timeout"],"IntervalSeconds":30,"MaxAttempts":3,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"IngestionFailed"}],"Type":"Task","ResultPath":"$.ingestionJob","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:bedrockagent:startIngestionJob","Parameters":{"KnowledgeBaseId":"",
              {
                "Fn::GetAtt": [
                  "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                  "KnowledgeBaseId",
                ],
              },
              "","DataSourceId":"",
              {
                "Fn::GetAtt": [
                  "TestKBkbS3DataSourceCDF728B0",
                  "DataSourceId",
                ],
              },
              ""}},"IngestionSucceeded":{"Type":"Succeed","Comment":"Knowledge base ingestion job started successfully"},"IngestionFailed":{"Type":"Fail","Comment":"Knowledge base ingestion job failed after retries"}},"TimeoutSeconds":3600}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "TestKBIngestionStateMachineLogGroup242A951D",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "IncludeExecutionData": true,
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "TestKBIngestionRole9E63714E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "TestKBStartIngestionJobStateMachineEventsRoleD4F80410": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestKBStartIngestionJobStateMachineEventsRoleDefaultPolicy10850E5E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TestKBStartIngestionJobStateMachineB364EE04",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBStartIngestionJobStateMachineEventsRoleDefaultPolicy10850E5E",
        "Roles": [
          {
            "Ref": "TestKBStartIngestionJobStateMachineEventsRoleD4F80410",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestKBkbS3DataSourceCDF728B0": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::GetAtt": [
                "TestBucket560B80BC",
                "Arn",
              ],
            },
            "InclusionPrefixes": [
              "documents/",
            ],
          },
          "Type": "S3",
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
            "KnowledgeBaseId",
          ],
        },
        "Name": "test-kb",
        "VectorIngestionConfiguration": {
          "ChunkingConfiguration": {
            "ChunkingStrategy": "FIXED_SIZE",
            "FixedSizeChunkingConfiguration": {
              "MaxTokens": 500,
              "OverlapPercentage": 20,
            },
          },
        },
      },
      "Type": "AWS::Bedrock::DataSource",
    },
    "TestKBtestkbKBCRPolicy2D439B92": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock CreateKnowledgeBase can't be restricted by resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrock:CreateKnowledgeBase",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "bedrock:UpdateKnowledgeBase",
                "bedrock:DeleteKnowledgeBase",
                "bedrock:TagResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:us-east-1:123456789012:knowledge-base/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestKBtestkbRole5C6B3014",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBtestkbKBCRPolicy2D439B92",
        "Roles": [
          {
            "Ref": "TestKBtestkbRole5C6B3014",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestKBtestkbKBIndexManageIndexPolicyD6D36CC6": {
      "DependsOn": [
        "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
        "TestKBtestkbKBVectorsDataAccessPolicyCE223341",
        "TestKBtestkbKBVectorsEncryptionPolicy093D01DC",
        "TestKBtestkbKBVectorsNetworkPolicy184DFF04",
        "TestKBtestkbKBVectorsVectorCollection71BA8602",
      ],
      "Properties": {
        "Name": "manageindexpolicytesdexe666e610",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"Resource":["index/vectorstoreteststectors81c71f6f/*"],"Permission":["aoss:DescribeIndex","aoss:CreateIndex","aoss:DeleteIndex","aoss:UpdateIndex"],"ResourceType":"index"},{"Resource":["collection/vectorstoreteststectors81c71f6f"],"Permission":["aoss:DescribeCollectionItems"],"ResourceType":"collection"}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "OpenSearchIndexCRProviderCRRole466FC04E",
                  "Arn",
                ],
              },
              ""],"Description":""}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "TestKBtestkbKBIndexVectorIndex43A342C5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TestKBtestkbKBIndexManageIndexPolicyD6D36CC6",
        "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
        "TestKBtestkbKBVectorsDataAccessPolicyCE223341",
        "TestKBtestkbKBVectorsEncryptionPolicy093D01DC",
        "TestKBtestkbKBVectorsNetworkPolicy184DFF04",
        "TestKBtestkbKBVectorsVectorCollection71BA8602",
      ],
      "Properties": {
        "Dimensions": 512,
        "DistanceType": "l2",
        "Endpoint": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "TestKBtestkbKBVectorsVectorCollection71BA8602",
                  "Id",
                ],
              },
              ".us-east-1.aoss.amazonaws.com",
            ],
          ],
        },
        "IndexName": "bedrock-knowledge-base-default-index",
        "MetadataManagement": [
          {
            "DataType": "text",
            "Filterable": true,
            "MappingField": "AMAZON_BEDROCK_TEXT_CHUNK",
          },
          {
            "DataType": "text",
            "Filterable": false,
            "MappingField": "AMAZON_BEDROCK_METADATA",
          },
        ],
        "Precision": "float",
        "ServiceToken": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderframeworkonEvent6CAE4696",
            "Arn",
          ],
        },
        "VectorField": "bedrock-knowledge-base-default-vector",
      },
      "Type": "Custom::OpenSearchIndex",
      "UpdateReplacePolicy": "Delete",
    },
    "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestKBtestkbKBVectorsVectorCollection71BA8602",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "TestKBtestkbKBVectorsDataAccessPolicyCE223341": {
      "Condition": "TestKBtestkbKBVectorsIsDataAccessPolicyNotEmpty0A94954A",
      "Properties": {
        "Name": "dataaccesspolicytesttors81c71f6f",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"Resource":["collection/vectorstoreteststectors81c71f6f"],"Permission":["aoss:DescribeCollectionItems","aoss:CreateCollectionItems","aoss:UpdateCollectionItems"],"ResourceType":"collection"},{"Resource":["index/vectorstoreteststectors81c71f6f/*"],"Permission":["aoss:UpdateIndex","aoss:DescribeIndex","aoss:ReadDocument","aoss:WriteDocument","aoss:CreateIndex"],"ResourceType":"index"}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "TestKBtestkbRole5C6B3014",
                  "Arn",
                ],
              },
              ""],"Description":""}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "TestKBtestkbKBVectorsEncryptionPolicy093D01DC": {
      "Properties": {
        "Name": "encryptionpolicytesttors81c71f6f",
        "Policy": "{"Rules":[{"ResourceType":"collection","Resource":["collection/vectorstoreteststectors81c71f6f"]}],"AWSOwnedKey":true}",
        "Type": "encryption",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "TestKBtestkbKBVectorsNetworkPolicy184DFF04": {
      "Properties": {
        "Name": "networkpolicytestsctors81c71f6f",
        "Policy": "[{"Rules":[{"ResourceType":"collection","Resource":["collection/vectorstoreteststectors81c71f6f"]},{"ResourceType":"dashboard","Resource":["collection/vectorstoreteststectors81c71f6f"]}],"AllowFromPublic":true}]",
        "Type": "network",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "TestKBtestkbKBVectorsVectorCollection71BA8602": {
      "DependsOn": [
        "TestKBtestkbKBVectorsEncryptionPolicy093D01DC",
        "TestKBtestkbKBVectorsNetworkPolicy184DFF04",
      ],
      "Properties": {
        "Name": "vectorstoreteststectors81c71f6f",
        "StandbyReplicas": "ENABLED",
        "Tags": [
          {
            "Key": "Name",
            "Value": "vectorstoreteststectors81c71f6f",
          },
          {
            "Key": "Type",
            "Value": "VectorCollection",
          },
        ],
        "Type": "VECTORSEARCH",
      },
      "Type": "AWS::OpenSearchServerless::Collection",
    },
    "TestKBtestkbMyCfnKnowledgeBaseB8638DDD": {
      "DependsOn": [
        "TestKBtestkbKBCRPolicy2D439B92",
        "TestKBtestkbKBIndexManageIndexPolicyD6D36CC6",
        "TestKBtestkbKBIndexVectorIndex43A342C5",
        "TestKBtestkbRoleDefaultPolicy867FAD56",
        "TestKBtestkbRole5C6B3014",
      ],
      "Properties": {
        "Description": "Test knowledge base",
        "KnowledgeBaseConfiguration": {
          "Type": "VECTOR",
          "VectorKnowledgeBaseConfiguration": {
            "EmbeddingModelArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":bedrock:",
                  {
                    "Ref": "AWS::Region",
                  },
                  "::foundation-model/amazon.titan-embed-text-v2:0",
                ],
              ],
            },
            "EmbeddingModelConfiguration": {
              "BedrockEmbeddingModelConfiguration": {
                "Dimensions": 512,
                "EmbeddingDataType": "FLOAT32",
              },
            },
          },
        },
        "Name": "KBTestStackTestKBtestkbDDA4E653",
        "RoleArn": {
          "Fn::GetAtt": [
            "TestKBtestkbRole5C6B3014",
            "Arn",
          ],
        },
        "StorageConfiguration": {
          "OpensearchServerlessConfiguration": {
            "CollectionArn": {
              "Fn::GetAtt": [
                "TestKBtestkbKBVectorsVectorCollection71BA8602",
                "Arn",
              ],
            },
            "FieldMapping": {
              "MetadataField": "AMAZON_BEDROCK_METADATA",
              "TextField": "AMAZON_BEDROCK_TEXT_CHUNK",
              "VectorField": "bedrock-knowledge-base-default-vector",
            },
            "VectorIndexName": "bedrock-knowledge-base-default-index",
          },
          "Type": "OPENSEARCH_SERVERLESS",
        },
      },
      "Type": "AWS::Bedrock::KnowledgeBase",
    },
    "TestKBtestkbRole5C6B3014": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock Knowledge Base requires wildcard permissions to invoke embedding models",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The KB role needs read only access to all objects in the data source bucket.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":bedrock:us-east-1:123456789012:knowledge-base/*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": "123456789012",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
          },
        ],
        "RoleName": "AmazonBedrockExecutionRoleForKnowledgeBaseTestStaBtestkbDDA4E653",
      },
      "Type": "AWS::IAM::Role",
    },
    "TestKBtestkbRoleDefaultPolicy867FAD56": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock Knowledge Base requires wildcard permissions to invoke embedding models",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The KB role needs read only access to all objects in the data source bucket.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock:InvokeModel*",
                "bedrock:GetFoundationModel",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    "::foundation-model/amazon.titan-embed-text-v2:0",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBtestkbRoleDefaultPolicy867FAD56",
        "Roles": [
          {
            "Ref": "TestKBtestkbRole5C6B3014",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`CloudFormation Template Validation CloudFormation Template Snapshots should generate consistent template for integrated constructs: integrated-bedrock-constructs-template 1`] = `
{
  "Conditions": {
    "TestKBtestkbKBVectorsIsDataAccessPolicyNotEmpty0A94954A": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            0,
            1,
          ],
        },
      ],
    },
  },
  "Outputs": {
    "TestAgentAgentCoreRoleArn29F8F598": {
      "Description": "ARN of the Agent Core Runtime execution role",
      "Export": {
        "Name": "TestStack-RoleArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestAgentAgentRole7811AA85",
          "Arn",
        ],
      },
    },
    "TestAgentAgentRuntimeArn02A292C5": {
      "Description": "ARN of the created Agent Core Runtime",
      "Export": {
        "Name": "TestStack-AgentRuntimeArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestAgentAgentRuntime11E2CCB8",
          "agentRuntimeArn",
        ],
      },
    },
    "TestAgentAgentRuntimeIdBE43F530": {
      "Description": "ID of the created Agent Core Runtime",
      "Export": {
        "Name": "TestStack-AgentRuntimeId",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestAgentAgentRuntime11E2CCB8",
          "agentRuntimeId",
        ],
      },
    },
    "TestAgentS3BucketName1921EC13": {
      "Description": "Name of the S3 bucket for data storage",
      "Export": {
        "Name": "TestStack-S3Bucket",
      },
      "Value": {
        "Ref": "TestBucket560B80BC",
      },
    },
    "TestKBDataSourceId717D5BD3": {
      "Description": "ID of the S3 data source",
      "Export": {
        "Name": "TestStack-test-kb-DataSourceId",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestKBkbS3DataSourceCDF728B0",
          "DataSourceId",
        ],
      },
    },
    "TestKBKnowledgeBaseArn4BD2C453": {
      "Description": "ARN of the created knowledge base",
      "Export": {
        "Name": "TestStack-test-kb-KnowledgeBaseArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
          "KnowledgeBaseArn",
        ],
      },
    },
    "TestKBKnowledgeBaseIdECF5BC89": {
      "Description": "ID of the created knowledge base",
      "Export": {
        "Name": "TestStack-test-kb-KnowledgeBaseId",
      },
      "Value": {
        "Fn::GetAtt": [
          "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
          "KnowledgeBaseId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "34a66902956b031404ef497526f619b900363fe7fd65ff02b1de4c30fe10c034.zip",
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 600,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287LogRetentionCE72797A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OpenSearchIndexCRProviderCRRole466FC04E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK CustomResource Lambda uses the AWSLambdaBasicExecutionRole AWS Managed Policy.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2": {
      "DependsOn": [
        "OpenSearchIndexCRProviderCRRole466FC04E",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "6e36b09442a3e1426f4d6c3e701e77353ebb81665d49ec53a1e27ed8fdef4bbf.zip",
        },
        "Description": "Custom Resource Provider",
        "Handler": "custom_resources.on_event",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderCRRole466FC04E",
            "Arn",
          ],
        },
        "Runtime": "python3.12",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OpenSearchIndexCRProviderCustomResourcesFunctionLogRetentionC32546EF": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "OpenSearchIndexCRProviderProviderRole87B4E831": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK CustomResource Lambda uses the AWSLambdaBasicExecutionRole AWS Managed Policy.",
            },
            {
              "applies_to": [
                {
                  "regex": "/^Resource::<OpenSearchIndexCRProviderCustomResourcesFunction[A-Z0-9]+\\.Arn>:\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CDK CustomResource Provider has a wildcard to invoke any version of the specific Custom Resource function.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "regex": "/^Resource::<OpenSearchIndexCRProviderCustomResourcesFunction[A-Z0-9]+\\.Arn>:\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CDK CustomResource Provider has a wildcard to invoke any version of the specific Custom Resource function.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F",
        "Roles": [
          {
            "Ref": "OpenSearchIndexCRProviderProviderRole87B4E831",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OpenSearchIndexCRProviderframeworkonEvent6CAE4696": {
      "DependsOn": [
        "OpenSearchIndexCRProviderProviderRoleDefaultPolicy9810CB1F",
        "OpenSearchIndexCRProviderProviderRole87B4E831",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Lambda runtime version is managed upstream by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStack/OpenSearchIndexCRProvider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "OpenSearchIndexCRProviderCustomResourcesFunction4F9ADEA2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "ApplicationLogLevel": "FATAL",
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderProviderRole87B4E831",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OpenSearchIndexCRProviderframeworkonEventLogRetention64E7FA2B": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "OpenSearchIndexCRProviderframeworkonEvent6CAE4696",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TestAgentAgentRole7811AA85": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": "arn:aws:bedrock-agentcore:us-east-1:123456789012:*",
                },
                "StringEquals": {
                  "aws:SourceAccount": "123456789012",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock-agentcore.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestAgentAgentRoleDefaultPolicyD7FA17B4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock:InvokeModel",
                "bedrock:InvokeModelWithResponseStream",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "BedrockPermissions",
            },
            {
              "Action": [
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetAuthorizationToken",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:us-east-1:123456789012:repository/*",
              "Sid": "ECRImageAccess",
            },
            {
              "Action": [
                "logs:DescribeLogStreams",
                "logs:CreateLogGroup",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:us-east-1:123456789012:log-group:/aws/bedrock-agentcore/runtimes/*",
            },
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:us-east-1:123456789012:log-group:*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:us-east-1:123456789012:log-group:/aws/bedrock-agentcore/runtimes/*:log-stream:*",
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "ECRTokenAccess",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "XRayPermissions",
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": "bedrock-agentcore",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "bedrock-agentcore:GetWorkloadAccessToken",
                "bedrock-agentcore:GetWorkloadAccessTokenForJWT",
                "bedrock-agentcore:GetWorkloadAccessTokenForUserId",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:bedrock-agentcore:us-east-1:123456789012:workload-identity-directory/default",
                "arn:aws:bedrock-agentcore:us-east-1:123456789012:workload-identity-directory/defaultworkload-identity/test-agent-*",
              ],
              "Sid": "GetAgentAccessToken",
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:ListBucket",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/agent-data/*",
                    ],
                  ],
                },
              ],
              "Sid": "S3DataStorage",
            },
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":aoss:us-east-1:123456789012:collection/vectorstoreteststectors81c71f6f",
                  ],
                ],
              },
            },
            {
              "Action": [
                "bedrock:Retrieve",
                "bedrock:RetrieveAndGenerate",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                  "KnowledgeBaseArn",
                ],
              },
              "Sid": {
                "Fn::Join": [
                  "",
                  [
                    "KnowledgeBaseId-",
                    {
                      "Fn::GetAtt": [
                        "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                        "KnowledgeBaseId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestAgentAgentRoleDefaultPolicyD7FA17B4",
        "Roles": [
          {
            "Ref": "TestAgentAgentRole7811AA85",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestAgentAgentRuntime11E2CCB8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TestAgentAgentRuntimeCustomResourcePolicy69AC4949",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"bedrock-agentcore-control","action":"createAgentRuntime","parameters":{"agentRuntimeName":"test-agent","description":"Bedrock Agent Core Runtime for test-agent","agentRuntimeArtifact":{"containerConfiguration":{"containerUri":"",
              {
                "Fn::Sub": "123456789012.dkr.ecr.us-east-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-123456789012-us-east-1:b362f89f4115ff45b603718ab7ca3150c23230ad95a2d16f756ced7259ea857d",
              },
              ""}},"networkConfiguration":{"networkMode":"PUBLIC"},"protocolConfiguration":{"serverProtocol":"HTTP"},"roleArn":"",
              {
                "Fn::GetAtt": [
                  "TestAgentAgentRole7811AA85",
                  "Arn",
                ],
              },
              "","environmentVariables":{"MCP_PORT":"8000","MCP_AUTH_ENABLED":"false","MCP_SSE_ENABLED":"false","STORAGE_TYPE":"s3","S3_URL_EXPIRATION":"3600","USE_PRESIGNED_URLS":"true","NODE_ENV":"production","LOG_LEVEL":"info","S3_BUCKET":"",
              {
                "Ref": "TestBucket560B80BC",
              },
              "","S3_PREFIX":"agent-data/","S3_REGION":"us-east-1","AWS_REGION":"us-east-1"}},"physicalResourceId":{"responsePath":"agentRuntimeId"}}",
            ],
          ],
        },
        "Delete": "{"service":"bedrock-agentcore-control","action":"deleteAgentRuntime","parameters":{"agentRuntimeId":"PHYSICAL:RESOURCEID:"},"ignoreErrorCodesMatching":"ValidationException|InvalidParameterException|ResourceNotFoundException|BadRequestException|ConflictException|InternalServerException|.*agentRuntimeId.*|.*not.*found.*|.*does.*not.*exist.*"}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"bedrock-agentcore-control","action":"updateAgentRuntime","parameters":{"agentRuntimeId":"PHYSICAL:RESOURCEID:","description":"Bedrock Agent Core Runtime for test-agent","roleArn":"",
              {
                "Fn::GetAtt": [
                  "TestAgentAgentRole7811AA85",
                  "Arn",
                ],
              },
              "","agentRuntimeArtifact":{"containerConfiguration":{"containerUri":"",
              {
                "Fn::Sub": "123456789012.dkr.ecr.us-east-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-123456789012-us-east-1:b362f89f4115ff45b603718ab7ca3150c23230ad95a2d16f756ced7259ea857d",
              },
              ""}},"networkConfiguration":{"networkMode":"PUBLIC"},"protocolConfiguration":{"serverProtocol":"HTTP"},"environmentVariables":{"MCP_PORT":"8000","MCP_AUTH_ENABLED":"false","MCP_SSE_ENABLED":"false","STORAGE_TYPE":"s3","S3_URL_EXPIRATION":"3600","USE_PRESIGNED_URLS":"true","NODE_ENV":"production","LOG_LEVEL":"info","S3_BUCKET":"",
              {
                "Ref": "TestBucket560B80BC",
              },
              "","S3_PREFIX":"agent-data/","S3_REGION":"us-east-1","AWS_REGION":"us-east-1"}},"physicalResourceId":{"responsePath":"agentRuntimeId"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AgentCoreRuntime",
      "UpdateReplacePolicy": "Delete",
    },
    "TestAgentAgentRuntimeCustomResourcePolicy69AC4949": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock-agentcore:CreateAgentRuntime",
                "bedrock-agentcore:CreateAgentRuntimeEndpoint",
                "bedrock-agentcore:UpdateAgentRuntime",
                "bedrock-agentcore:UpdateAgentRuntimeEndpoint",
                "bedrock-agentcore:DeleteAgentRuntime",
                "bedrock-agentcore:DeleteAgentRuntimeEndpoint",
                "bedrock-agentcore:GetAgentRuntime",
                "bedrock-agentcore:GetAgentRuntimeEndpoint",
                "bedrock-agentcore:DescribeAgentRuntime",
                "bedrock-agentcore:ListAgentRuntimes",
                "bedrock-agentcore:ListAgentRuntimeEndpoints",
                "bedrock-agentcore:CreateWorkloadIdentity",
                "bedrock-agentcore:DeleteWorkloadIdentity",
                "bedrock-agentcore:GetWorkloadIdentity",
                "bedrock-agentcore:UpdateWorkloadIdentity",
                "bedrock-agentcore:ListWorkloadIdentities",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock-agentcore:us-east-1:123456789012:*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock-agentcore:us-east-1:123456789012:runtime/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock-agentcore:us-east-1:123456789012:workload-identity-directory/*",
                    ],
                  ],
                },
              ],
              "Sid": "AgentCoreRuntimeManagement",
            },
            {
              "Action": "iam:PassRole",
              "Condition": {
                "StringEquals": {
                  "iam:PassedToService": "bedrock-agentcore.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestAgentAgentRole7811AA85",
                  "Arn",
                ],
              },
              "Sid": "AgentCorePassRole",
            },
            {
              "Action": [
                "ecr:DescribeImages",
                "ecr:DescribeRepositories",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:us-east-1:123456789012:repository/*",
                  ],
                ],
              },
              "Sid": "ECRValidateImages",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestAgentAgentRuntimeCustomResourcePolicy69AC4949",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestBucket560B80BC": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestKBIngestionRole9E63714E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "bedrock:StartIngestionJob",
                    "bedrock:GetIngestionJob",
                    "bedrock:ListIngestionJobs",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                      "KnowledgeBaseArn",
                    ],
                  },
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "IngestionPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestKBIngestionRoleDefaultPolicyEC999C4D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrockagent:startIngestionJob",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                    "KnowledgeBaseArn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBIngestionRoleDefaultPolicyEC999C4D",
        "Roles": [
          {
            "Ref": "TestKBIngestionRole9E63714E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestKBIngestionStateMachineLogGroup242A951D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "TestKBS3DataSourceIngestionSyncF8A0DD07": {
      "Properties": {
        "ScheduleExpression": "rate(10 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TestKBStartIngestionJobStateMachineB364EE04",
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "TestKBStartIngestionJobStateMachineEventsRoleD4F80410",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "TestKBStartIngestionJobStateMachineB364EE04": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TestKBIngestionRoleDefaultPolicyEC999C4D",
        "TestKBIngestionRole9E63714E",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"StartIngestionJob","States":{"StartIngestionJob":{"Next":"IngestionSucceeded","Retry":[{"ErrorEquals":["States.TaskFailed","States.Timeout"],"IntervalSeconds":30,"MaxAttempts":3,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"IngestionFailed"}],"Type":"Task","ResultPath":"$.ingestionJob","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:bedrockagent:startIngestionJob","Parameters":{"KnowledgeBaseId":"",
              {
                "Fn::GetAtt": [
                  "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
                  "KnowledgeBaseId",
                ],
              },
              "","DataSourceId":"",
              {
                "Fn::GetAtt": [
                  "TestKBkbS3DataSourceCDF728B0",
                  "DataSourceId",
                ],
              },
              ""}},"IngestionSucceeded":{"Type":"Succeed","Comment":"Knowledge base ingestion job started successfully"},"IngestionFailed":{"Type":"Fail","Comment":"Knowledge base ingestion job failed after retries"}},"TimeoutSeconds":3600}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "TestKBIngestionStateMachineLogGroup242A951D",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "IncludeExecutionData": true,
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "TestKBIngestionRole9E63714E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "TestKBStartIngestionJobStateMachineEventsRoleD4F80410": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestKBStartIngestionJobStateMachineEventsRoleDefaultPolicy10850E5E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TestKBStartIngestionJobStateMachineB364EE04",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBStartIngestionJobStateMachineEventsRoleDefaultPolicy10850E5E",
        "Roles": [
          {
            "Ref": "TestKBStartIngestionJobStateMachineEventsRoleD4F80410",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestKBkbS3DataSourceCDF728B0": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::GetAtt": [
                "TestBucket560B80BC",
                "Arn",
              ],
            },
            "InclusionPrefixes": [
              "documents/",
            ],
          },
          "Type": "S3",
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "TestKBtestkbMyCfnKnowledgeBaseB8638DDD",
            "KnowledgeBaseId",
          ],
        },
        "Name": "test-kb",
        "VectorIngestionConfiguration": {
          "ChunkingConfiguration": {
            "ChunkingStrategy": "FIXED_SIZE",
            "FixedSizeChunkingConfiguration": {
              "MaxTokens": 500,
              "OverlapPercentage": 20,
            },
          },
        },
      },
      "Type": "AWS::Bedrock::DataSource",
    },
    "TestKBtestkbKBCRPolicy2D439B92": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock CreateKnowledgeBase can't be restricted by resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrock:CreateKnowledgeBase",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "bedrock:UpdateKnowledgeBase",
                "bedrock:DeleteKnowledgeBase",
                "bedrock:TagResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:us-east-1:123456789012:knowledge-base/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestKBtestkbRole5C6B3014",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBtestkbKBCRPolicy2D439B92",
        "Roles": [
          {
            "Ref": "TestKBtestkbRole5C6B3014",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestKBtestkbKBIndexManageIndexPolicyD6D36CC6": {
      "DependsOn": [
        "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
        "TestKBtestkbKBVectorsDataAccessPolicyCE223341",
        "TestKBtestkbKBVectorsEncryptionPolicy093D01DC",
        "TestKBtestkbKBVectorsNetworkPolicy184DFF04",
        "TestKBtestkbKBVectorsVectorCollection71BA8602",
      ],
      "Properties": {
        "Name": "manageindexpolicytesdexe666e610",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"Resource":["index/vectorstoreteststectors81c71f6f/*"],"Permission":["aoss:DescribeIndex","aoss:CreateIndex","aoss:DeleteIndex","aoss:UpdateIndex"],"ResourceType":"index"},{"Resource":["collection/vectorstoreteststectors81c71f6f"],"Permission":["aoss:DescribeCollectionItems"],"ResourceType":"collection"}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "OpenSearchIndexCRProviderCRRole466FC04E",
                  "Arn",
                ],
              },
              ""],"Description":""}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "TestKBtestkbKBIndexVectorIndex43A342C5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TestKBtestkbKBIndexManageIndexPolicyD6D36CC6",
        "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
        "TestKBtestkbKBVectorsDataAccessPolicyCE223341",
        "TestKBtestkbKBVectorsEncryptionPolicy093D01DC",
        "TestKBtestkbKBVectorsNetworkPolicy184DFF04",
        "TestKBtestkbKBVectorsVectorCollection71BA8602",
      ],
      "Properties": {
        "Dimensions": 512,
        "DistanceType": "l2",
        "Endpoint": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "TestKBtestkbKBVectorsVectorCollection71BA8602",
                  "Id",
                ],
              },
              ".us-east-1.aoss.amazonaws.com",
            ],
          ],
        },
        "IndexName": "bedrock-knowledge-base-default-index",
        "MetadataManagement": [
          {
            "DataType": "text",
            "Filterable": true,
            "MappingField": "AMAZON_BEDROCK_TEXT_CHUNK",
          },
          {
            "DataType": "text",
            "Filterable": false,
            "MappingField": "AMAZON_BEDROCK_METADATA",
          },
        ],
        "Precision": "float",
        "ServiceToken": {
          "Fn::GetAtt": [
            "OpenSearchIndexCRProviderframeworkonEvent6CAE4696",
            "Arn",
          ],
        },
        "VectorField": "bedrock-knowledge-base-default-vector",
      },
      "Type": "Custom::OpenSearchIndex",
      "UpdateReplacePolicy": "Delete",
    },
    "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestKBtestkbKBVectorsVectorCollection71BA8602",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "TestKBtestkbKBVectorsDataAccessPolicyCE223341": {
      "Condition": "TestKBtestkbKBVectorsIsDataAccessPolicyNotEmpty0A94954A",
      "Properties": {
        "Name": "dataaccesspolicytesttors81c71f6f",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"Resource":["collection/vectorstoreteststectors81c71f6f"],"Permission":["aoss:DescribeCollectionItems","aoss:CreateCollectionItems","aoss:UpdateCollectionItems"],"ResourceType":"collection"},{"Resource":["index/vectorstoreteststectors81c71f6f/*"],"Permission":["aoss:UpdateIndex","aoss:DescribeIndex","aoss:ReadDocument","aoss:WriteDocument","aoss:CreateIndex"],"ResourceType":"index"}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "TestKBtestkbRole5C6B3014",
                  "Arn",
                ],
              },
              ""],"Description":""}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "TestKBtestkbKBVectorsEncryptionPolicy093D01DC": {
      "Properties": {
        "Name": "encryptionpolicytesttors81c71f6f",
        "Policy": "{"Rules":[{"ResourceType":"collection","Resource":["collection/vectorstoreteststectors81c71f6f"]}],"AWSOwnedKey":true}",
        "Type": "encryption",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "TestKBtestkbKBVectorsNetworkPolicy184DFF04": {
      "Properties": {
        "Name": "networkpolicytestsctors81c71f6f",
        "Policy": "[{"Rules":[{"ResourceType":"collection","Resource":["collection/vectorstoreteststectors81c71f6f"]},{"ResourceType":"dashboard","Resource":["collection/vectorstoreteststectors81c71f6f"]}],"AllowFromPublic":true}]",
        "Type": "network",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "TestKBtestkbKBVectorsVectorCollection71BA8602": {
      "DependsOn": [
        "TestKBtestkbKBVectorsEncryptionPolicy093D01DC",
        "TestKBtestkbKBVectorsNetworkPolicy184DFF04",
      ],
      "Properties": {
        "Name": "vectorstoreteststectors81c71f6f",
        "StandbyReplicas": "ENABLED",
        "Tags": [
          {
            "Key": "Name",
            "Value": "vectorstoreteststectors81c71f6f",
          },
          {
            "Key": "Type",
            "Value": "VectorCollection",
          },
        ],
        "Type": "VECTORSEARCH",
      },
      "Type": "AWS::OpenSearchServerless::Collection",
    },
    "TestKBtestkbMyCfnKnowledgeBaseB8638DDD": {
      "DependsOn": [
        "TestKBtestkbKBCRPolicy2D439B92",
        "TestKBtestkbKBIndexManageIndexPolicyD6D36CC6",
        "TestKBtestkbKBIndexVectorIndex43A342C5",
        "TestKBtestkbRoleDefaultPolicy867FAD56",
        "TestKBtestkbRole5C6B3014",
      ],
      "Properties": {
        "Description": "Test knowledge base",
        "KnowledgeBaseConfiguration": {
          "Type": "VECTOR",
          "VectorKnowledgeBaseConfiguration": {
            "EmbeddingModelArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":bedrock:",
                  {
                    "Ref": "AWS::Region",
                  },
                  "::foundation-model/amazon.titan-embed-text-v2:0",
                ],
              ],
            },
            "EmbeddingModelConfiguration": {
              "BedrockEmbeddingModelConfiguration": {
                "Dimensions": 512,
                "EmbeddingDataType": "FLOAT32",
              },
            },
          },
        },
        "Name": "KBTestStackTestKBtestkbDDA4E653",
        "RoleArn": {
          "Fn::GetAtt": [
            "TestKBtestkbRole5C6B3014",
            "Arn",
          ],
        },
        "StorageConfiguration": {
          "OpensearchServerlessConfiguration": {
            "CollectionArn": {
              "Fn::GetAtt": [
                "TestKBtestkbKBVectorsVectorCollection71BA8602",
                "Arn",
              ],
            },
            "FieldMapping": {
              "MetadataField": "AMAZON_BEDROCK_METADATA",
              "TextField": "AMAZON_BEDROCK_TEXT_CHUNK",
              "VectorField": "bedrock-knowledge-base-default-vector",
            },
            "VectorIndexName": "bedrock-knowledge-base-default-index",
          },
          "Type": "OPENSEARCH_SERVERLESS",
        },
      },
      "Type": "AWS::Bedrock::KnowledgeBase",
    },
    "TestKBtestkbRole5C6B3014": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock Knowledge Base requires wildcard permissions to invoke embedding models",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The KB role needs read only access to all objects in the data source bucket.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":bedrock:us-east-1:123456789012:knowledge-base/*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": "123456789012",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "TestKBtestkbKBVectorsAOSSApiAccessAllDA3E2187",
          },
        ],
        "RoleName": "AmazonBedrockExecutionRoleForKnowledgeBaseTestStaBtestkbDDA4E653",
      },
      "Type": "AWS::IAM::Role",
    },
    "TestKBtestkbRoleDefaultPolicy867FAD56": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bedrock Knowledge Base requires wildcard permissions to invoke embedding models",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The KB role needs read only access to all objects in the data source bucket.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock:InvokeModel*",
                "bedrock:GetFoundationModel",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    "::foundation-model/amazon.titan-embed-text-v2:0",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestKBtestkbRoleDefaultPolicy867FAD56",
        "Roles": [
          {
            "Ref": "TestKBtestkbRole5C6B3014",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
